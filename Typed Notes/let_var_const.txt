We shall start discussing on let,var and const.

var, let, and const are all used to declare variables in JavaScript, but they have some key differences:

var: Variables declared with var are function-scoped, meaning they are only accessible within the function in which they are defined.
 If a variable is declared with var outside of any function, it becomes a global variable and can be accessed from anywhere in the code. 
Variables declared with var are also hoisted, meaning they are moved to the top of their scope and can be accessed before they are declared.

let: Variables declared with let are block-scoped, meaning they are only accessible within the block in which they are defined.
 Unlike var, variables declared with let are not hoisted, so they cannot be accessed before they are declared.

const: Variables declared with const are also block-scoped, but they cannot be reassigned after they are declared.
 This makes const useful for declaring variables that will always refer to the same value, such as constants or configuration options.


1) var let and const -- varible declaration 

 // let var and const   
console.log(name1) //hoisting  ---> undefined
var name1 = 'John Doe';//help in hoisting
console.log(name1);

let name2 = 'John Doe';
console.log(name2);//not hoisting

const name3 = 'John Doe';
console.log(name3);//not hoisting

{
    // var name4 = 'John Doe';
    // console.log(name4);  //function scope 

    // let name5 = 'John Doe';
    // console.log(name5);  //block scope 

    // const name6 = 'John Doe'; //block scope
    // console.log(name6);
}

// console.log(name6);

var x=4;
var x=5;
console.log(x);//redeclaration possible

let y=4;
// let y=5; //error
console.log(y); //redeclaration not possible

const z=4;
//const z=5; //error //redecaration not possible

//let and const
let s=7;
s=8;
console.log(s); //reassignment possible

const t=7;
// t=8; //error //reassignment not possible


const obj={x:4};
console.log(obj);

obj.x=5;
console.log(obj);

obj={x:5}; //error //reassignment not possible

